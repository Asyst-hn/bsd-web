[{"/Users/beto/Projects/bsd-web/src/index.tsx":"1","/Users/beto/Projects/bsd-web/src/styles/rootTheme.ts":"2","/Users/beto/Projects/bsd-web/src/App.tsx":"3","/Users/beto/Projects/bsd-web/src/context/notifications.tsx":"4","/Users/beto/Projects/bsd-web/src/context/auth.tsx":"5","/Users/beto/Projects/bsd-web/src/utils/api.ts":"6","/Users/beto/Projects/bsd-web/src/utils/localStore.ts":"7","/Users/beto/Projects/bsd-web/src/pages/home/Home.tsx":"8","/Users/beto/Projects/bsd-web/src/pages/login/Login.tsx":"9","/Users/beto/Projects/bsd-web/src/pages/login/styles.ts":"10","/Users/beto/Projects/bsd-web/src/pages/home/TopBar.tsx":"11","/Users/beto/Projects/bsd-web/src/pages/home/styles.ts":"12","/Users/beto/Projects/bsd-web/src/pages/ticket-table/TicketTable.tsx":"13","/Users/beto/Projects/bsd-web/src/pages/ticket-table/styles.ts":"14","/Users/beto/Projects/bsd-web/src/utils/spanishLocaleText.ts":"15","/Users/beto/Projects/bsd-web/src/components/SearchInput.tsx":"16","/Users/beto/Projects/bsd-web/src/components/TableCell.tsx":"17","/Users/beto/Projects/bsd-web/src/hooks/useTickets.ts":"18","/Users/beto/Projects/bsd-web/src/components/TableCellDate.tsx":"19"},{"size":1141,"mtime":1613680416820,"results":"20","hashOfConfig":"21"},{"size":623,"mtime":1612928926673,"results":"22","hashOfConfig":"21"},{"size":1069,"mtime":1613674660898,"results":"23","hashOfConfig":"21"},{"size":1427,"mtime":1612921543960,"results":"24","hashOfConfig":"21"},{"size":799,"mtime":1613593237397,"results":"25","hashOfConfig":"21"},{"size":607,"mtime":1613675111832,"results":"26","hashOfConfig":"21"},{"size":383,"mtime":1613592605028,"results":"27","hashOfConfig":"21"},{"size":791,"mtime":1613680524883,"results":"28","hashOfConfig":"21"},{"size":2227,"mtime":1613674702595,"results":"29","hashOfConfig":"21"},{"size":477,"mtime":1612921781112,"results":"30","hashOfConfig":"21"},{"size":1105,"mtime":1612928745734,"results":"31","hashOfConfig":"21"},{"size":597,"mtime":1612932136733,"results":"32","hashOfConfig":"21"},{"size":4208,"mtime":1613683009699,"results":"33","hashOfConfig":"21"},{"size":357,"mtime":1613679407259,"results":"34","hashOfConfig":"21"},{"size":2237,"mtime":1612921585004,"results":"35","hashOfConfig":"21"},{"size":926,"mtime":1612929617033,"results":"36","hashOfConfig":"21"},{"size":476,"mtime":1612929148222,"results":"37","hashOfConfig":"21"},{"size":326,"mtime":1613675214880,"results":"38","hashOfConfig":"21"},{"size":621,"mtime":1612929157708,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1p82ehv",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/beto/Projects/bsd-web/src/index.tsx",[],["85","86"],"/Users/beto/Projects/bsd-web/src/styles/rootTheme.ts",[],"/Users/beto/Projects/bsd-web/src/App.tsx",[],"/Users/beto/Projects/bsd-web/src/context/notifications.tsx",[],"/Users/beto/Projects/bsd-web/src/context/auth.tsx",[],"/Users/beto/Projects/bsd-web/src/utils/api.ts",[],"/Users/beto/Projects/bsd-web/src/utils/localStore.ts",[],["87","88"],"/Users/beto/Projects/bsd-web/src/pages/home/Home.tsx",["89","90"],"import React from 'react';\nimport { TopBar } from './TopBar';\nimport { Grid } from '@material-ui/core';\nimport { Switch, Route } from 'react-router-dom';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { useStyles } from './styles';\nimport { TicketTable } from '../ticket-table/TicketTable';\nimport { api } from '../../utils/api';\nimport { useQuery } from 'react-query';\n\nexport const Home: React.FC = () => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Grid container style={{ height: '100vh', width: '100%' }}>\n\t\t\t<Grid item className={classes.canvas}>\n\t\t\t\t<TopBar />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/app/tablero'>\n\t\t\t\t\t\t<TicketTable />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</Grid>\n\n\t\t\t<ReactQueryDevtools initialIsOpen={false} position='bottom-right' />\n\t\t</Grid>\n\t);\n};\n","/Users/beto/Projects/bsd-web/src/pages/login/Login.tsx",["91","92","93","94","95"],"import React, { useEffect } from 'react';\nimport { Grid, TextField, Button, Typography } from '@material-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useAuth } from '../../context/auth';\nimport { useMutation } from 'react-query';\nimport { AxiosError } from 'axios';\nimport { useForm } from 'react-hook-form';\nimport { api } from '../../utils/api';\nimport { loginStyles } from './styles';\nimport { useNotifications } from '../../context/notifications';\n\nexport const Login: React.FC = () => {\n\tconst classes = loginStyles();\n\tconst history = useHistory();\n\tconst { setUserId, setIsAuthenticated } = useAuth();\n\tconst { setAlert } = useNotifications();\n\n\tconst { register, handleSubmit, errors } = useForm({\n\t\tmode: 'onBlur',\n\t\tdefaultValues: { username: '', password: '' }\n\t});\n\n\tconst { mutate, isLoading, isError, error } = useMutation(\n\t\t(body: any) =>\n\t\t\tapi({\n\t\t\t\tpath: `Glb_usuarios/VerifyLogin/${body.username}&${body.password}`,\n\t\t\t\tmethod: 'GET'\n\t\t\t}),\n\t\t{\n\t\t\tonSuccess: res => {\n\t\t\t\tsetUserId(res.data.userId);\n\t\t\t\tsetIsAuthenticated(true);\n\t\t\t\tsetAlert('Ha ingresado exitosamente', 'success');\n\t\t\t\thistory.push('/app');\n\t\t\t}\n\t\t}\n\t);\n\n\tconst loginHandler = async (data: any) => mutate(data);\n\n\treturn (\n\t\t<Grid container className={classes.root}>\n\t\t\t<form\n\t\t\t\tonSubmit={handleSubmit(loginHandler)}\n\t\t\t\tclassName={classes.form}\n\t\t\t\tnoValidate\n\t\t\t>\n\t\t\t\t<TextField\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tplaceholder='Usuario'\n\t\t\t\t\tautoComplete='username email'\n\t\t\t\t\tname='username'\n\t\t\t\t\terror={!!errors.username}\n\t\t\t\t\tinputRef={register({ required: true })}\n\t\t\t\t\tsize='small'\n\t\t\t\t\tclassName={classes.input}\n\t\t\t\t/>\n\t\t\t\t<TextField\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\ttype='password'\n\t\t\t\t\tplaceholder='Contraseña'\n\t\t\t\t\tautoComplete='password'\n\t\t\t\t\tname='password'\n\t\t\t\t\terror={!!errors.password}\n\t\t\t\t\tinputRef={register({ required: true })}\n\t\t\t\t\tsize='small'\n\t\t\t\t\tclassName={classes.input}\n\t\t\t\t/>\n\n\t\t\t\t{isError ? (\n\t\t\t\t\t<p className={classes.inputError}>\n\t\t\t\t\t\tUsuario o contraseña incorrecto\n\t\t\t\t\t</p>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\n\t\t\t\t<Button\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\ttype='submit'\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t>\n\t\t\t\t\t{isLoading ? 'Ingresando...' : 'Ingresar'}\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t</Grid>\n\t);\n};\n","/Users/beto/Projects/bsd-web/src/pages/login/styles.ts",[],"/Users/beto/Projects/bsd-web/src/pages/home/TopBar.tsx",[],"/Users/beto/Projects/bsd-web/src/pages/home/styles.ts",[],"/Users/beto/Projects/bsd-web/src/pages/ticket-table/TicketTable.tsx",["96","97","98","99","100","101","102","103"],"import React, { useState, useEffect } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { api } from '../../utils/api';\nimport { Button, Typography } from '@material-ui/core';\nimport { TableCell } from '../../components/TableCell';\nimport { DataGrid, RowsProp, ColDef } from '@material-ui/data-grid';\nimport { MUI_GRID_SPANISH_LOCALE_TEXT } from '../../utils/spanishLocaleText';\nimport { useStyles } from './styles';\nimport { useTickets } from '../../hooks/useTickets';\nimport {\n\tTicket,\n\tTicketTypeMap,\n\tClientTypeMap,\n\tStatusTypeMap\n} from '../../utils/types';\nimport { TableCellDate } from '../../components/TableCellDate';\nimport { useAuth } from '../../context/auth';\n\nexport const TicketTable: React.FC = () => {\n\tconst classes = useStyles();\n\tconst { url } = useRouteMatch();\n\tconst { userId } = useAuth();\n\tconst columns = buildColumns(url);\n\tconst [rows, setRows] = useState([]);\n\tconst [startDate, setStartDate] = useState();\n\tconst [endDate, setEndDate] = useState();\n\tconst [ticketCount, setTicketCount] = useState(0);\n\n\tconst { data: ticketTypes } = useQuery('ticket-types', () =>\n\t\tapi({ path: 'Sdk_Tickets/GetAllTipoSoli', method: 'GET' })\n\t);\n\tconst { data: clients } = useQuery('clients', () =>\n\t\tapi({ path: `Sdk_Tickets/GetAllClientes/${userId}`, method: 'GET' })\n\t);\n\tconst { data: statuses } = useQuery('statuses', () =>\n\t\tapi({ path: 'Sdk_Tickets/GetAllEstados', method: 'GET' })\n\t);\n\tconst { data: tickets } = useQuery('tickets', () =>\n\t\tapi({\n\t\t\tpath: `Sdk_Tickets/GetAllTickets/${userId}&2021-02-01&2021-02-15`,\n\t\t\tmethod: 'GET'\n\t\t})\n\t);\n\n\tuseEffect(() => {\n\t\tbuildRows(\n\t\t\tmapTicket(\n\t\t\t\ttickets?.data,\n\t\t\t\tticketTypes?.data as TicketTypeMap[],\n\t\t\t\tclients?.data as ClientTypeMap[],\n\t\t\t\tstatuses?.data as StatusTypeMap[]\n\t\t\t),\n\t\t\tsetRows\n\t\t);\n\t\tsetTicketCount(tickets?.data.length);\n\t}, [tickets]);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.actionBar}>\n\t\t\t\t<Typography variant='h5' color='primary'>\n\t\t\t\t\tTickets\n\t\t\t\t</Typography>\n\t\t\t\t<Typography variant='h5' color='primary'>\n\t\t\t\t\t{'Cantidad: ' + ticketCount}\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t\t<DataGrid\n\t\t\t\trows={rows}\n\t\t\t\tcolumns={columns}\n\t\t\t\tpaginationMode='client'\n\t\t\t\tdisableColumnFilter\n\t\t\t\tlocaleText={MUI_GRID_SPANISH_LOCALE_TEXT}\n\t\t\t\tclassName={classes.grid}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nconst mapTicket = (\n\ttickets: Ticket[],\n\ttypes: TicketTypeMap[],\n\tclients: ClientTypeMap[],\n\tstatuses: StatusTypeMap[]\n) => {\n\tif (tickets) {\n\t\tconst mappedTickets = tickets.map(ticket => {\n\t\t\ttypes.forEach(type => {\n\t\t\t\tif (ticket.tipReq === type.tipReq) {\n\t\t\t\t\tticket.tipReq = type.nomTip;\n\t\t\t\t}\n\t\t\t});\n\t\t\tclients.forEach(client => {\n\t\t\t\tif (ticket.codCli === client.codCli) {\n\t\t\t\t\tticket.codCli = client.nomCli;\n\t\t\t\t}\n\t\t\t});\n\t\t\tstatuses.forEach(status => {\n\t\t\t\tif (ticket.staReq === status.staReq) {\n\t\t\t\t\tticket.staReq = status.nomSta;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ticket;\n\t\t});\n\n\t\treturn mappedTickets;\n\t} else {\n\t\treturn [];\n\t}\n};\n\nconst buildRows = (tickets: Ticket[], setRows: (rows: any) => void) => {\n\tconst rows: RowsProp = [];\n\n\tif (tickets) {\n\t\ttickets.forEach(ticket => {\n\t\t\trows.push({\n\t\t\t\tid: ticket.lnkSol,\n\t\t\t\ttt: ticket.tipReq,\n\t\t\t\tst: ticket.staReq,\n\t\t\t\tfe: ticket.fecemi,\n\t\t\t\tcc: ticket.codCli,\n\t\t\t\tsj: ticket.subJet\n\t\t\t});\n\t\t});\n\t\tsetRows(rows);\n\t}\n\tsetRows(rows);\n};\n\nconst buildColumns = (pathname: string) => {\n\tconst columns: ColDef[] = [\n\t\t{\n\t\t\tfield: 'fe',\n\t\t\theaderName: 'Fecha de Emisión',\n\t\t\tflex: 0.65,\n\t\t\trenderCell: params => (\n\t\t\t\t<TableCellDate pathname={pathname} params={params} />\n\t\t\t)\n\t\t},\n\t\t{\n\t\t\tfield: 'tt',\n\t\t\theaderName: 'Tipo',\n\t\t\tflex: 0.75,\n\t\t\trenderCell: params => (\n\t\t\t\t<TableCell pathname={pathname} params={params} />\n\t\t\t)\n\t\t},\n\t\t{\n\t\t\tfield: 'st',\n\t\t\theaderName: 'Estado',\n\t\t\tflex: 0.5,\n\t\t\trenderCell: params => (\n\t\t\t\t<TableCell pathname={pathname} params={params} />\n\t\t\t)\n\t\t},\n\t\t{\n\t\t\tfield: 'cc',\n\t\t\theaderName: 'Cliente',\n\t\t\tflex: 0.5,\n\t\t\trenderCell: params => (\n\t\t\t\t<TableCell pathname={pathname} params={params} />\n\t\t\t)\n\t\t},\n\t\t{\n\t\t\tfield: 'sj',\n\t\t\theaderName: 'Asunto',\n\t\t\tflex: 1.5,\n\t\t\trenderCell: params => (\n\t\t\t\t<TableCell pathname={pathname} params={params} />\n\t\t\t)\n\t\t}\n\t];\n\treturn columns;\n};\n","/Users/beto/Projects/bsd-web/src/pages/ticket-table/styles.ts",[],"/Users/beto/Projects/bsd-web/src/utils/spanishLocaleText.ts",[],"/Users/beto/Projects/bsd-web/src/components/SearchInput.tsx",[],["104","105"],"/Users/beto/Projects/bsd-web/src/components/TableCell.tsx",[],"/Users/beto/Projects/bsd-web/src/hooks/useTickets.ts",[],["106","107"],"/Users/beto/Projects/bsd-web/src/components/TableCellDate.tsx",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"108","replacedBy":"112"},{"ruleId":"110","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":8,"column":10,"nodeType":"116","messageId":"117","endLine":8,"endColumn":13},{"ruleId":"114","severity":1,"message":"118","line":9,"column":10,"nodeType":"116","messageId":"117","endLine":9,"endColumn":18},{"ruleId":"114","severity":1,"message":"119","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":26},{"ruleId":"114","severity":1,"message":"120","line":2,"column":35,"nodeType":"116","messageId":"117","endLine":2,"endColumn":45},{"ruleId":"114","severity":1,"message":"121","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":14},{"ruleId":"114","severity":1,"message":"122","line":6,"column":10,"nodeType":"116","messageId":"117","endLine":6,"endColumn":20},{"ruleId":"114","severity":1,"message":"123","line":23,"column":38,"nodeType":"116","messageId":"117","endLine":23,"endColumn":43},{"ruleId":"114","severity":1,"message":"121","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":14},{"ruleId":"114","severity":1,"message":"124","line":5,"column":10,"nodeType":"116","messageId":"117","endLine":5,"endColumn":16},{"ruleId":"114","severity":1,"message":"125","line":10,"column":10,"nodeType":"116","messageId":"117","endLine":10,"endColumn":20},{"ruleId":"114","severity":1,"message":"126","line":26,"column":9,"nodeType":"116","messageId":"117","endLine":26,"endColumn":18},{"ruleId":"114","severity":1,"message":"127","line":26,"column":20,"nodeType":"116","messageId":"117","endLine":26,"endColumn":32},{"ruleId":"114","severity":1,"message":"128","line":27,"column":9,"nodeType":"116","messageId":"117","endLine":27,"endColumn":16},{"ruleId":"114","severity":1,"message":"129","line":27,"column":18,"nodeType":"116","messageId":"117","endLine":27,"endColumn":28},{"ruleId":"130","severity":1,"message":"131","line":57,"column":5,"nodeType":"132","endLine":57,"endColumn":14,"suggestions":"133"},{"ruleId":"108","replacedBy":"134"},{"ruleId":"110","replacedBy":"135"},{"ruleId":"108","replacedBy":"136"},{"ruleId":"110","replacedBy":"137"},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],["138"],["139"],"@typescript-eslint/no-unused-vars","'api' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","'useEffect' is defined but never used.","'Typography' is defined but never used.","'Link' is defined but never used.","'AxiosError' is defined but never used.","'error' is assigned a value but never used.","'Button' is defined but never used.","'useTickets' is defined but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'endDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'clients?.data', 'statuses?.data', and 'ticketTypes?.data'. Either include them or remove the dependency array.","ArrayExpression",["140"],["138"],["139"],["138"],["139"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},"Update the dependencies array to be: [clients?.data, statuses?.data, ticketTypes?.data, tickets]",{"range":"143","text":"144"},[1880,1889],"[clients?.data, statuses?.data, ticketTypes?.data, tickets]"]